% ABOUT
% Graphical User Interface (GUI) for three different types of stochastic
% short rate models. 
%
% 1. Simple: dr(t) = sigma*dW(t)
% 2. Brownian: dr(t) = alpha*dt + sigma*dW(t)
% 3. Vasicek: dr(t) = kappa(theta-r(t))dt + sigma*dW(t)
%
% To run, simply type into the Command Window 'interestRateGUI' and refer to the
% manual. 
% 
% The following code is mostly auto-generated by MATLAB but the button 
% functionality was implemented by us. 



function varargout = interestRateGUI(varargin)
% INTERESTRATEGUI MATLAB code for interestRateGUI.fig
%      INTERESTRATEGUI, by itself, creates a new INTERESTRATEGUI or raises the existing
%      singleton*.
%
%      H = INTERESTRATEGUI returns the handle to a new INTERESTRATEGUI or the handle to
%      the existing singleton*.
%
%      INTERESTRATEGUI('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in INTERESTRATEGUI.M with the given input arguments.
%
%      INTERESTRATEGUI('Property','Value',...) creates a new INTERESTRATEGUI or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before interestRateGUI_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to interestRateGUI_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose 'GUI allows only one
%      instance to run (singleton)'.
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help interestRateGUI

% Last Modified by GUIDE v2.5 06-May-2019 14:02:17

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @interestRateGUI_OpeningFcn, ...
                   'gui_OutputFcn',  @interestRateGUI_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT

% --- Executes just before interestRateGUI is made visible.
function interestRateGUI_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to interestRateGUI (see VARARGIN)

% Choose default command line output for interestRateGUI
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% This sets up the initial plot - only do when we are invisible
% so window can get raised using interestRateGUI.

handles.initialRate = str2double(get(handles.edit2,'String'))/100;
handles.stepSize = 1/250;
handles.volatility = str2double(get(handles.edit3,'String'))/100;
handles.maturity = str2double(get(handles.edit1,'String'));
handles.speedOfReversion = str2double(get(handles.edit9,'String'))/100;
handles.longTermMeanLevel = str2double(get(handles.edit10,'String'))/100;
handles.legend = {};

simple = interestRate("Simple", handles.initialRate, handles.stepSize, handles.volatility, handles.speedOfReversion, handles.longTermMeanLevel, handles.maturity, 1);
handles.simple = simple;
brownian = interestRate("Brownian", handles.initialRate, handles.stepSize, handles.volatility, handles.speedOfReversion, handles.longTermMeanLevel, handles.maturity, 1);
handles.brownian = brownian;
vasicek = interestRate("Vasicek", handles.initialRate, handles.stepSize, handles.volatility, handles.speedOfReversion, handles.longTermMeanLevel, handles.maturity, 1);
handles.vasicek = vasicek;
guidata(hObject, handles);
maturityDate = today + handles.maturity*365;

if strcmp(get(hObject,'Visible'),'off')
    plot(today(), handles.initialRate*100)
    grid on
    xlim([today() maturityDate]);
    ytickformat('%.2f%%')   
    datetick('x','dd/mm/yyyy')
%     handle.simple.plotSimulationss;
%     handle.brownian.plotSimulationss;
%     handle.vasicek.plotSimulationss;
end


% UIWAIT makes interestRateGUI wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = interestRateGUI_OutputFcn(hObject, eventdata, handles)
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;

% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
axes(handles.axes1);
cla;

handles.initialRate = str2double(get(handles.edit2,'String'))/100;
handles.stepSize = 1/250;
handles.volatility = str2double(get(handles.edit3,'String'))/100;
handles.maturity = str2double(get(handles.edit1,'String'));
handles.speedOfReversion = str2double(get(handles.edit9,'String'))/100;
handles.longTermMeanLevel = str2double(get(handles.edit10,'String'))/100;

simple = interestRate("Simple", handles.initialRate, handles.stepSize, handles.volatility, handles.speedOfReversion, handles.longTermMeanLevel, handles.maturity, 1);
handles.simple = simple;
brownian = interestRate("Brownian", handles.initialRate, handles.stepSize, handles.volatility, handles.speedOfReversion, handles.longTermMeanLevel, handles.maturity, 1);
handles.brownian = brownian;
vasicek = interestRate("Vasicek", handles.initialRate, handles.stepSize, handles.volatility, handles.speedOfReversion, handles.longTermMeanLevel, handles.maturity, 1);
handles.vasicek = vasicek;

handles.vasicek

handles.legend = {};

if get(handles.checkbox1, 'Value') == 1
    handles.simple.plotSimulations;
    handles.legend{end+1} = "Simple";
end
if get(handles.checkbox2, 'Value') == 1 
    handles.brownian.plotSimulations;
    handles.legend{end+1} = "Brownian";
end
if get(handles.checkbox3, 'Value') == 1         
    handles.vasicek.plotSimulations;
    handles.legend{end+1} = "Vasicek";
    
    IR = interestRate("Vasicek",handles.initialRate, handles.stepSize, handles.volatility, handles.speedOfReversion, handles.longTermMeanLevel, handles.maturity, 50);
    [theta_est, kappa_est, sigma_est, errorValue] = IR.estimateParameters;
    %IR.estimationImprovement;
    set(handles.text21, 'String', ""+ sigma_est*100);
    set(handles.text22, 'String', ""+ kappa_est*100);
    set(handles.text23, 'String', ""+ theta_est*100);
    set(handles.text25, 'String', ""+ errorValue);
    
    [theta_OLS, kappa_OLS, sigma_OLS, errorValue_OLS] = IR.ordinaryLeastSquares;
    %IR.estimationImprovementOLS;
    set(handles.text27, 'String', ""+ sigma_OLS*100);
    set(handles.text28, 'String', ""+ kappa_OLS*100);
    set(handles.text29, 'String', ""+ theta_OLS*100);
    set(handles.text30, 'String', ""+ errorValue_OLS);
    
    guidata(hObject, handles);
end
legend(handles.axes1, handles.legend)


% --------------------------------------------------------------------
function FileMenu_Callback(hObject, eventdata, handles)
% hObject    handle to FileMenu (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --------------------------------------------------------------------
function OpenMenuItem_Callback(hObject, eventdata, handles)
% hObject    handle to OpenMenuItem (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
file = uigetfile('*.fig');
if ~isequal(file, 0)
    open(file);
end

% --------------------------------------------------------------------
function PrintMenuItem_Callback(hObject, eventdata, handles)
% hObject    handle to PrintMenuItem (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
printdlg(handles.figure1)

% --------------------------------------------------------------------
function CloseMenuItem_Callback(hObject, eventdata, handles)
% hObject    handle to CloseMenuItem (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
selection = questdlg(['Close ' get(handles.figure1,'Name') '?'],...
                     ['Close ' get(handles.figure1,'Name') '...'],...
                     'Yes','No','Yes');
if strcmp(selection,'No')
    return;
end

delete(handles.figure1)


% --- Executes on selection change in popupmenu1.
function popupmenu1_Callback(hObject, eventdata, handles)
% hObject    handle to popupmenu1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: contents = get(hObject,'String') returns popupmenu1 contents as cell array
%        contents{get(hObject,'Value')} returns selected item from popupmenu1


% --- Executes on button press in checkbox1.
function checkbox1_Callback(hObject, eventdata, handles)
%handles = guidata(hObject)
% hObject    handle to checkbox1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of checkbox1
handles.simple.plotSimulations;
exists = false;
for i = 1:length(handles.legend)
    if(handles.legend{i} == "Simple")
        exists = true;
    end
end
if ~exists
    handles.legend{end+1} = "Simple";    
end
legend(handles.axes1,handles.legend)
guidata(hObject, handles);

% --- Executes on button press in checkbox2.
function checkbox2_Callback(hObject, eventdata, handles)
% hObject    handle to checkbox2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of checkbox2
handles.brownian.plotSimulations;
exists = false;
for i = 1:length(handles.legend)
    if(handles.legend{i} == "Brownian")
        exists = true;
    end
end
if ~exists
    handles.legend{end+1} = "Brownian";
end
legend(handles.axes1,handles.legend)
guidata(hObject, handles);

% --- Executes on button press in checkbox3.
function checkbox3_Callback(hObject, eventdata, handles)
% hObject    handle to checkbox3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hint: get(hObject,'Value') returns toggle state of checkbox3

handles.initialRate = str2double(get(handles.edit2,'String'))/100;
handles.stepSize = 1/250;
handles.volatility = str2double(get(handles.edit3,'String'))/100;
handles.maturity = str2double(get(handles.edit1,'String'));
handles.speedOfReversion = str2double(get(handles.edit9,'String'))/100;
handles.longTermMeanLevel = str2double(get(handles.edit10,'String'))/100;

vasicek = interestRate("Vasicek", handles.initialRate, handles.stepSize, handles.volatility, handles.speedOfReversion, handles.longTermMeanLevel, handles.maturity, 1);
handles.vasicek = vasicek;
handles.vasicek.plotSimulations;

IR = interestRate("Vasicek",handles.initialRate, handles.stepSize, handles.volatility, handles.speedOfReversion, handles.longTermMeanLevel, handles.maturity, 50);
[theta_est, kappa_est, sigma_est, errorValue] = IR.estimateParameters;

set(handles.text21, 'String', ""+ sigma_est*100);
set(handles.text22, 'String', ""+ kappa_est*100);
set(handles.text23, 'String', ""+ theta_est*100);
set(handles.text25, 'String', ""+ errorValue);

[theta_OLS, kappa_OLS, sigma_OLS, errorValue_OLS] = IR.ordinaryLeastSquares;
set(handles.text27, 'String', ""+ sigma_OLS*100);
set(handles.text28, 'String', ""+ kappa_OLS*100);
set(handles.text29, 'String', ""+ theta_OLS*100);
set(handles.text30, 'String', ""+ errorValue_OLS);

exists = false;
for i = 1:length(handles.legend)
    if(handles.legend{i} == "Vasicek")
        exists = true;
    end
end
if ~exists
    handles.legend{end+1} = "Vasicek";
end
legend(handles.axes1,handles.legend)
guidata(hObject, handles);


function edit1_Callback(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit1 as text
%        str2double(get(hObject,'String')) returns contents of edit1 as a double
guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function edit1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit2_Callback(hObject, eventdata, handles)
% hObject    handle to edit2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit2 as text
%        str2double(get(hObject,'String')) returns contents of edit2 as a double
guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function edit2_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit3_Callback(hObject, eventdata, handles)
% hObject    handle to edit3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit3 as text
%        str2double(get(hObject,'String')) returns contents of edit3 as a double
guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function edit3_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function edit4_Callback(hObject, eventdata, handles)
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit4 as text
%        str2double(get(hObject,'String')) returns contents of edit4 as a double
guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function edit4_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit4 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end

function edit5_Callback(hObject, eventdata, handles)
% hObject    handle to edit5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit5 as text
%        str2double(get(hObject,'String')) returns contents of edit5 as a double


% --- Executes during object creation, after setting all properties.
function edit5_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit5 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
guidata(hObject, handles);

function edit6_Callback(hObject, eventdata, handles)
% hObject    handle to edit6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit6 as text
%        str2double(get(hObject,'String')) returns contents of edit6 as a double


% --- Executes during object creation, after setting all properties.
function edit6_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit6 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
guidata(hObject, handles);



function edit7_Callback(hObject, eventdata, handles)
% hObject    handle to edit7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit7 as text
%        str2double(get(hObject,'String')) returns contents of edit7 as a double
guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function edit7_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit7 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
guidata(hObject, handles);



function edit9_Callback(hObject, eventdata, handles)
% hObject    handle to edit9 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit9 as text
%        str2double(get(hObject,'String')) returns contents of edit9 as a double
guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function edit9_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit9 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
guidata(hObject, handles);


function edit10_Callback(hObject, eventdata, handles)
% hObject    handle to edit10 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit10 as text
%        str2double(get(hObject,'String')) returns contents of edit10 as a double
guidata(hObject, handles);


% --- Executes during object creation, after setting all properties.
function edit10_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit10 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
